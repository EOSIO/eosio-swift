//
//  EosioSwiftAbieosTests.swift
//  EosioSwiftAbieosTests
//
//  Created by Steve McCoole on 11/6/18.
// Copyright (c) 2017-2019 block.one and its contributors. All rights reserved.
//

// swiftlint:disable line_length
import Foundation
import XCTest
import EosioSwiftAbieosSerializationProvider
import EosioSwift

class EosioSwiftAbieosTests: XCTestCase {

    var abieos: EosioAbieosSerializationProvider? = EosioAbieosSerializationProvider()

    func testHexToJsonTransaction() {
        let hex = "1686755CA99DE8E73E12000000000100A6823403EA3055000000572D3CCDCD0100AEAA4AC15CFD4500000000A8ED32323B00AEAA4AC15CFD4500000060D234CD3DA06806000000000004454F53000000001A746865206772617373686F70706572206C69657320686561767900"

        let json = """
        {"expiration":"2019-02-26T18:31:50.000","ref_block_num":40361,"ref_block_prefix":306112488,"max_net_usage_words":0,"max_cpu_usage_ms":0,"delay_sec":0,"context_free_actions":[],"actions":[{"account":"eosio.token","name":"transfer","authorization":[{"actor":"cryptkeeper","permission":"active"}],"data":"00AEAA4AC15CFD4500000060D234CD3DA06806000000000004454F53000000001A746865206772617373686F70706572206C696573206865617679"}],"transaction_extensions":[]}
        """

        do {
            let result = try abieos?.deserializeTransaction(hex: hex)
            XCTAssertTrue(json == result)
        } catch {
            XCTFail("Failed to deserialize transaction")
        }
    }

    func testHexToJsonAbi() {
        let hex = "0e656f73696f3a3a6162692f312e30010c6163636f756e745f6e616d65046e616d6505087472616e7366657200040466726f6d0c6163636f756e745f6e616d6502746f0c6163636f756e745f6e616d65087175616e74697479056173736574046d656d6f06737472696e67066372656174650002066973737565720c6163636f756e745f6e616d650e6d6178696d756d5f737570706c79056173736574056973737565000302746f0c6163636f756e745f6e616d65087175616e74697479056173736574046d656d6f06737472696e67076163636f756e7400010762616c616e63650561737365740e63757272656e63795f7374617473000306737570706c790561737365740a6d61785f737570706c79056173736574066973737565720c6163636f756e745f6e616d6503000000572d3ccdcd087472616e73666572bc072d2d2d0a7469746c653a20546f6b656e205472616e736665720a73756d6d6172793a205472616e7366657220746f6b656e732066726f6d206f6e65206163636f756e7420746f20616e6f746865722e0a69636f6e3a2068747470733a2f2f63646e2e746573746e65742e6465762e62316f70732e6e65742f746f6b656e2d7472616e736665722e706e6723636535316566396639656563613334333465383535303765306564343965373666666631323635343232626465643032353566333139366561353963386230630a2d2d2d0a0a2323205472616e73666572205465726d73202620436f6e646974696f6e730a0a492c207b7b66726f6d7d7d2c20636572746966792074686520666f6c6c6f77696e6720746f206265207472756520746f207468652062657374206f66206d79206b6e6f776c656467653a0a0a312e204920636572746966792074686174207b7b7175616e746974797d7d206973206e6f74207468652070726f6365656473206f66206672617564756c656e74206f722076696f6c656e7420616374697669746965732e0a322e2049206365727469667920746861742c20746f207468652062657374206f66206d79206b6e6f776c656467652c207b7b746f7d7d206973206e6f7420737570706f7274696e6720696e6974696174696f6e206f662076696f6c656e636520616761696e7374206f74686572732e0a332e2049206861766520646973636c6f73656420616e7920636f6e747261637475616c207465726d73202620636f6e646974696f6e732077697468207265737065637420746f207b7b7175616e746974797d7d20746f207b7b746f7d7d2e0a0a4920756e6465727374616e6420746861742066756e6473207472616e736665727320617265206e6f742072657665727369626c6520616674657220746865207b7b247472616e73616374696f6e2e64656c61795f7365637d7d207365636f6e6473206f72206f746865722064656c617920617320636f6e66696775726564206279207b7b66726f6d7d7d2773207065726d697373696f6e732e0a0a4966207468697320616374696f6e206661696c7320746f20626520697272657665727369626c7920636f6e6669726d656420616674657220726563656976696e6720676f6f6473206f722073657276696365732066726f6d20277b7b746f7d7d272c204920616772656520746f206569746865722072657475726e2074686520676f6f6473206f72207365727669636573206f7220726573656e64207b7b7175616e746974797d7d20696e20612074696d656c79206d616e6e65722e0000000000a531760569737375650000000000a86cd445066372656174650002000000384f4d113203693634010863757272656e6379010675696e743634076163636f756e740000000000904dc603693634010863757272656e6379010675696e7436340e63757272656e63795f737461747300000000"
        
        let json = """
        {"version":"eosio::abi/1.0","types":[{"new_type_name":"account_name","type":"name"}],"structs":[{"name":"transfer","base":"","fields":[{"name":"from","type":"account_name"},{"name":"to","type":"account_name"},{"name":"quantity","type":"asset"},{"name":"memo","type":"string"}]},{"name":"create","base":"","fields":[{"name":"issuer","type":"account_name"},{"name":"maximum_supply","type":"asset"}]},{"name":"issue","base":"","fields":[{"name":"to","type":"account_name"},{"name":"quantity","type":"asset"},{"name":"memo","type":"string"}]},{"name":"account","base":"","fields":[{"name":"balance","type":"asset"}]},{"name":"currency_stats","base":"","fields":[{"name":"supply","type":"asset"},{"name":"max_supply","type":"asset"},{"name":"issuer","type":"account_name"}]}],"actions":[{"name":"transfer","type":"transfer","ricardian_contract":"---\ntitle: Token Transfer\nsummary: Transfer tokens from one account to another.\nicon: https://cdn.testnet.dev.b1ops.net/token-transfer.png#ce51ef9f9eeca3434e85507e0ed49e76fff1265422bded0255f3196ea59c8b0c\n---\n\n## Transfer Terms & Conditions\n\nI, {{from}}, certify the following to be true to the best of my knowledge:\n\n1. I certify that {{quantity}} is not the proceeds of fraudulent or violent activities.\n2. I certify that, to the best of my knowledge, {{to}} is not supporting initiation of violence against others.\n3. I have disclosed any contractual terms & conditions with respect to {{quantity}} to {{to}}.\n\nI understand that funds transfers are not reversible after the {{$transaction.delay_sec}} seconds or other delay as configured by {{from}}'s permissions.\n\nIf this action fails to be irreversibly confirmed after receiving goods or services from '{{to}}', I agree to either return the goods or services or resend {{quantity}} in a timely manner."},{"name":"issue","type":"issue","ricardian_contract":""},{"name":"create","type":"create","ricardian_contract":""}],"tables":[{"name":"accounts","index_type":"i64","key_names":["currency"],"key_types":["uint64"],"type":"account"},{"name":"stat","index_type":"i64","key_names":["currency"],"key_types":["uint64"],"type":"currency_stats"}],"ricardian_clauses":[],"error_messages":[],"variants":[]}
        """
        
        do {
            let result = try abieos?.deserializeAbi(hex: hex)
            let expectedJson = json.replacingOccurrences(of: "\n", with: "\\n")
            XCTAssertTrue(compareJson(expected: expectedJson, isSubsetOf: result))
        } catch {
            print(error)
            XCTFail("Failed to deserialize abi")
        }
    }
    
    func testOnePointOneAbi() {
        let abiHex
        
        let abiJson = """
        {\"version\":\"eosio::abi/1.1\",\"types\":[],\"structs\":[{\"name\":\"abi_hash\",\"base\":\"\",\"fields\":[{\"name\":\"owner\",\"type\":\"name\"},{\"name\":\"hash\",\"type\":\"checksum256\"}]},{\"name\":\"activate\",\"base\":\"\",\"fields\":[{\"name\":\"feature_digest\",\"type\":\"checksum256\"}]},{\"name\":\"authority\",\"base\":\"\",\"fields\":[{\"name\":\"threshold\",\"type\":\"uint32\"},{\"name\":\"keys\",\"type\":\"key_weight[]\"},{\"name\":\"accounts\",\"type\":\"permission_level_weight[]\"},{\"name\":\"waits\",\"type\":\"wait_weight[]\"}]},{\"name\":\"blockchain_parameters\",\"base\":\"\",\"fields\":[{\"name\":\"max_block_net_usage\",\"type\":\"uint64\"},{\"name\":\"target_block_net_usage_pct\",\"type\":\"uint32\"},{\"name\":\"max_transaction_net_usage\",\"type\":\"uint32\"},{\"name\":\"base_per_transaction_net_usage\",\"type\":\"uint32\"},{\"name\":\"net_usage_leeway\",\"type\":\"uint32\"},{\"name\":\"context_free_discount_net_usage_num\",\"type\":\"uint32\"},{\"name\":\"context_free_discount_net_usage_den\",\"type\":\"uint32\"},{\"name\":\"max_block_cpu_usage\",\"type\":\"uint32\"},{\"name\":\"target_block_cpu_usage_pct\",\"type\":\"uint32\"},{\"name\":\"max_transaction_cpu_usage\",\"type\":\"uint32\"},{\"name\":\"min_transaction_cpu_usage\",\"type\":\"uint32\"},{\"name\":\"max_transaction_lifetime\",\"type\":\"uint32\"},{\"name\":\"deferred_trx_expiration_window\",\"type\":\"uint32\"},{\"name\":\"max_transaction_delay\",\"type\":\"uint32\"},{\"name\":\"max_inline_action_size\",\"type\":\"uint32\"},{\"name\":\"max_inline_action_depth\",\"type\":\"uint16\"},{\"name\":\"max_authority_depth\",\"type\":\"uint16\"}]},{\"name\":\"canceldelay\",\"base\":\"\",\"fields\":[{\"name\":\"canceling_auth\",\"type\":\"permission_level\"},{\"name\":\"trx_id\",\"type\":\"checksum256\"}]},{\"name\":\"deleteauth\",\"base\":\"\",\"fields\":[{\"name\":\"account\",\"type\":\"name\"},{\"name\":\"permission\",\"type\":\"name\"}]},{\"name\":\"key_weight\",\"base\":\"\",\"fields\":[{\"name\":\"key\",\"type\":\"public_key\"},{\"name\":\"weight\",\"type\":\"uint16\"}]},{\"name\":\"linkauth\",\"base\":\"\",\"fields\":[{\"name\":\"account\",\"type\":\"name\"},{\"name\":\"code\",\"type\":\"name\"},{\"name\":\"type\",\"type\":\"name\"},{\"name\":\"requirement\",\"type\":\"name\"}]},{\"name\":\"newaccount\",\"base\":\"\",\"fields\":[{\"name\":\"creator\",\"type\":\"name\"},{\"name\":\"name\",\"type\":\"name\"},{\"name\":\"owner\",\"type\":\"authority\"},{\"name\":\"active\",\"type\":\"authority\"}]},{\"name\":\"onerror\",\"base\":\"\",\"fields\":[{\"name\":\"sender_id\",\"type\":\"uint128\"},{\"name\":\"sent_trx\",\"type\":\"bytes\"}]},{\"name\":\"permission_level\",\"base\":\"\",\"fields\":[{\"name\":\"actor\",\"type\":\"name\"},{\"name\":\"permission\",\"type\":\"name\"}]},{\"name\":\"permission_level_weight\",\"base\":\"\",\"fields\":[{\"name\":\"permission\",\"type\":\"permission_level\"},{\"name\":\"weight\",\"type\":\"uint16\"}]},{\"name\":\"producer_key\",\"base\":\"\",\"fields\":[{\"name\":\"producer_name\",\"type\":\"name\"},{\"name\":\"block_signing_key\",\"type\":\"public_key\"}]},{\"name\":\"reqactivated\",\"base\":\"\",\"fields\":[{\"name\":\"feature_digest\",\"type\":\"checksum256\"}]},{\"name\":\"reqauth\",\"base\":\"\",\"fields\":[{\"name\":\"from\",\"type\":\"name\"}]},{\"name\":\"setabi\",\"base\":\"\",\"fields\":[{\"name\":\"account\",\"type\":\"name\"},{\"name\":\"abi\",\"type\":\"bytes\"}]},{\"name\":\"setalimits\",\"base\":\"\",\"fields\":[{\"name\":\"account\",\"type\":\"name\"},{\"name\":\"ram_bytes\",\"type\":\"int64\"},{\"name\":\"net_weight\",\"type\":\"int64\"},{\"name\":\"cpu_weight\",\"type\":\"int64\"}]},{\"name\":\"setcode\",\"base\":\"\",\"fields\":[{\"name\":\"account\",\"type\":\"name\"},{\"name\":\"vmtype\",\"type\":\"uint8\"},{\"name\":\"vmversion\",\"type\":\"uint8\"},{\"name\":\"code\",\"type\":\"bytes\"}]},{\"name\":\"setparams\",\"base\":\"\",\"fields\":[{\"name\":\"params\",\"type\":\"blockchain_parameters\"}]},{\"name\":\"setpriv\",\"base\":\"\",\"fields\":[{\"name\":\"account\",\"type\":\"name\"},{\"name\":\"is_priv\",\"type\":\"uint8\"}]},{\"name\":\"setprods\",\"base\":\"\",\"fields\":[{\"name\":\"schedule\",\"type\":\"producer_key[]\"}]},{\"name\":\"unlinkauth\",\"base\":\"\",\"fields\":[{\"name\":\"account\",\"type\":\"name\"},{\"name\":\"code\",\"type\":\"name\"},{\"name\":\"type\",\"type\":\"name\"}]},{\"name\":\"updateauth\",\"base\":\"\",\"fields\":[{\"name\":\"account\",\"type\":\"name\"},{\"name\":\"permission\",\"type\":\"name\"},{\"name\":\"parent\",\"type\":\"name\"},{\"name\":\"auth\",\"type\":\"authority\"}]},{\"name\":\"wait_weight\",\"base\":\"\",\"fields\":[{\"name\":\"wait_sec\",\"type\":\"uint32\"},{\"name\":\"weight\",\"type\":\"uint16\"}]}],\"actions\":[{\"name\":\"activate\",\"type\":\"activate\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Activate Protocol Feature\\u000Asummary: \'Activate protocol feature {{nowrap feature_digest}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\\u000A---\\u000A\\u000A{{$action.account}} activates the protocol feature with a digest of {{feature_digest}}.\"},{\"name\":\"canceldelay\",\"type\":\"canceldelay\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Cancel Delayed Transaction\\u000Asummary: \'{{nowrap canceling_auth.actor}} cancels a delayed transaction\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000A{{canceling_auth.actor}} cancels the delayed transaction with id {{trx_id}}.\"},{\"name\":\"deleteauth\",\"type\":\"deleteauth\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Delete Account Permission\\u000Asummary: \'Delete the {{nowrap permission}} permission of {{nowrap account}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000ADelete the {{permission}} permission of {{account}}.\"},{\"name\":\"linkauth\",\"type\":\"linkauth\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Link Action to Permission\\u000Asummary: \'{{nowrap account}} sets the minimum required permission for the {{#if type}}{{nowrap type}} action of the{{/if}} {{nowrap code}} contract to {{nowrap requirement}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000A{{account}} sets the minimum required permission for the {{#if type}}{{type}} action of the{{/if}} {{code}} contract to {{requirement}}.\\u000A\\u000A{{#if type}}{{else}}Any links explicitly associated to specific actions of {{code}} will take precedence.{{/if}}\"},{\"name\":\"newaccount\",\"type\":\"newaccount\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Create New Account\\u000Asummary: \'{{nowrap creator}} creates a new account with the name {{nowrap name}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000A{{creator}} creates a new account with the name {{name}} and the following permissions:\\u000A\\u000Aowner permission with authority:\\u000A{{to_json owner}}\\u000A\\u000Aactive permission with authority:\\u000A{{to_json active}}\"},{\"name\":\"onerror\",\"type\":\"onerror\",\"ricardian_contract\":\"\"},{\"name\":\"reqactivated\",\"type\":\"reqactivated\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Assert Protocol Feature Activation\\u000Asummary: \'Assert that protocol feature {{nowrap feature_digest}} has been activated\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\\u000A---\\u000A\\u000AAssert that the protocol feature with a digest of {{feature_digest}} has been activated.\"},{\"name\":\"reqauth\",\"type\":\"reqauth\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Assert Authorization\\u000Asummary: \'Assert that authorization by {{nowrap from}} is provided\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000AAssert that authorization by {{from}} is provided.\"},{\"name\":\"setabi\",\"type\":\"setabi\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Deploy Contract ABI\\u000Asummary: \'Deploy contract ABI on account {{nowrap account}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000ADeploy the ABI file associated with the contract on account {{account}}.\"},{\"name\":\"setalimits\",\"type\":\"setalimits\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Adjust Resource Limits of Account\\u000Asummary: \'Adjust resource limits of account {{nowrap account}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\\u000A---\\u000A\\u000A{{$action.account}} updates {{account}}’s resource limits to have a RAM quota of {{ram_bytes}} bytes, a NET bandwidth quota of {{net_weight}} and a CPU bandwidth quota of {{cpu_weight}}.\"},{\"name\":\"setcode\",\"type\":\"setcode\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Deploy Contract Code\\u000Asummary: \'Deploy contract code on account {{nowrap account}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000ADeploy compiled contract code to the account {{account}}.\"},{\"name\":\"setparams\",\"type\":\"setparams\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Set System Parameters\\u000Asummary: \'Set system parameters\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\\u000A---\\u000A\\u000A{{$action.account}} sets system parameters to:\\u000A{{to_json params}}\"},{\"name\":\"setpriv\",\"type\":\"setpriv\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Make an Account Privileged or Unprivileged\\u000Asummary: \'{{#if is_priv}}Make {{nowrap account}} privileged{{else}}Remove privileged status of {{nowrap account}}{{/if}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\\u000A---\\u000A\\u000A{{#if is_priv}}\\u000A{{$action.account}} makes {{account}} privileged.\\u000A{{else}}\\u000A{{$action.account}} removes privileged status of {{account}}.\\u000A{{/if}}\"},{\"name\":\"setprods\",\"type\":\"setprods\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Set Block Producers\\u000Asummary: \'Set block producer schedule\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\\u000A---\\u000A\\u000A{{$action.account}} proposes a block producer schedule of:\\u000A{{#each schedule}}\\u000A  1. {{this.producer_name}} with a block signing key of {{this.block_signing_key}}\\u000A{{/each}}\"},{\"name\":\"unlinkauth\",\"type\":\"unlinkauth\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Unlink Action from Permission\\u000Asummary: \'{{nowrap account}} unsets the minimum required permission for the {{#if type}}{{nowrap type}} action of the{{/if}} {{nowrap code}} contract\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000A{{account}} removes the association between the {{#if type}}{{type}} action of the{{/if}} {{code}} contract and its minimum required permission.\\u000A\\u000A{{#if type}}{{else}}This will not remove any links explicitly associated to specific actions of {{code}}.{{/if}}\"},{\"name\":\"updateauth\",\"type\":\"updateauth\",\"ricardian_contract\":\"---\\u000Aspec_version: \\\"0.2.0\\\"\\u000Atitle: Modify Account Permission\\u000Asummary: \'Add or update the {{nowrap permission}} permission of {{nowrap account}}\'\\u000Aicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\\u000A---\\u000A\\u000AModify, and create if necessary, the {{permission}} permission of {{account}} to have a parent permission of {{parent}} and the following authority:\\u000A{{to_json auth}}\"}],\"tables\":[{\"name\":\"abihash\",\"index_type\":\"i64\",\"key_names\":[],\"key_types\":[],\"type\":\"abi_hash\"}],\"ricardian_clauses\":[],\"error_messages\":[],\"variants\":[]}
        """
        
        do {
            let result = try abieos?.serializeAbi(json: abiJson)
            XCTAssert(result == abiHex)
            if let res = result {
                let json2 = try abieos?.deserializeAbi(hex: res)
                XCTAssertTrue(compareJson(expected: abiJson, isSubsetOf: json2))
            }
        } catch {
            XCTFail("\(error)")
        }
    }
    
    func testAbiWithActionResults() {
        let abiJson = "{\"version\":\"eosio::abi/1.2\",\"types\":[],\"structs\":[{\"name\":\"actionresret\",\"base\":\"\",\"fields\":[]}],\"actions\":[{\"name\":\"actionresret\",\"type\":\"actionresret\",\"ricardian_contract\":\"\"}],\"tables\":[],\"ricardian_clauses\":[],\"error_messages\":[],\"action_results\":[{\"name\":\"actionresret\",\"result_type\":\"int32\"}]}"
        
        let abiHex = "0E656F73696F3A3A6162692F312E3200010C616374696F6E72657372657400000190D5C5EA4EEA32320C616374696F6E7265737265740000000000000190D5C5EA4EEA323205696E74333200"
        
        do {
            let result = try abieos?.serializeAbi(json: abiJson)
            XCTAssert(result == abiHex)
            if let res = result {
                let deserializedJson = try abieos?.deserializeAbi(hex: res)
                XCTAssert(compareJson(expected: abiJson, isSubsetOf: deserializedJson))
            }
        } catch {
            XCTFail("\(error)")
        }
    }

    func testJsonToHexTransaction() {
        let json = """
        {
        "expiration" : "2019-02-26T18:31:50.000",
        "ref_block_num" : 40361,
        "ref_block_prefix" : 306112488,
        "max_net_usage_words" : 0,
        "max_cpu_usage_ms" : 0,
        "delay_sec" : 0,
        "context_free_actions" : [],
        "actions" : [
        {
        "account" : "eosio.assert",
        "name" : "require",
        "authorization" : [],
        "data" : "CBDD956F52ACD910C3C958136D72F8560D1846BC7CF3157F5FBFB72D3001DE4597F4A1FDBECDA6D59C96A43009FC5E5D7B8F639B1269C77CEC718460DCC19CB30100A6823403EA3055000000572D3CCDCD0143864D5AF0FE294D44D19C612036CBE8C098414C4A12A5A7BB0BFE7DB1556248"
        },
        {
        "account" : "eosio.token",
        "name" : "transfer",
        "authorization" : [
        {
        "actor" : "cryptkeeper",
        "permission" : "active"
        }
        ],
        "data" : "00AEAA4AC15CFD4500000060D234CD3DA06806000000000004454F53000000001A746865206772617373686F70706572206C696573206865617679"
        }
        ]
        ,
        "transaction_extensions" : []}
        """
        let hex = "1686755CA99DE8E73E12000000000290AFC2D800EA3055000000405DA7ADBA0072CBDD956F52ACD910C3C958136D72F8560D1846BC7CF3157F5FBFB72D3001DE4597F4A1FDBECDA6D59C96A43009FC5E5D7B8F639B1269C77CEC718460DCC19CB30100A6823403EA3055000000572D3CCDCD0143864D5AF0FE294D44D19C612036CBE8C098414C4A12A5A7BB0BFE7DB155624800A6823403EA3055000000572D3CCDCD0100AEAA4AC15CFD4500000000A8ED32323B00AEAA4AC15CFD4500000060D234CD3DA06806000000000004454F53000000001A746865206772617373686F70706572206C69657320686561767900"
        do {
            let result = try abieos?.serializeTransaction(json: json)
            XCTAssertTrue(hex == result)
        } catch {
            XCTFail("\(error)")
        }
    }
    
    // Direct comparison of the JSON strings is fragile.  This compares the expected JSON to a result by checking
    // that its keys are a sub-set of the results keys since abieos can add keys for empty values.  Values are not
    // included since they can be anything (Any) and are not comparable.  If abieos gets the keys right, that is
    // good enough for the unit test.
    func compareJson(expected: String?, isSubsetOf result: String?) -> Bool {
        do {
            guard let json1 = expected, let json2 = result else {
                return false
            }
            let jsonDict1 = try JSONSerialization.jsonObject(with: Data(json1.utf8), options: []) as? [String: Any]
            let jsonDict2 = try JSONSerialization.jsonObject(with: Data(json2.utf8), options: []) as? [String: Any]
            guard let dict1 = jsonDict1, let dict2 = jsonDict2 else {
                print("Can't convert json to dictionary.")
                return false
            }
            let keys1 = Set(dict1.keys)
            let keys2 = Set(dict2.keys)
            return keys1.isSubset(of: keys2)
        } catch {
            print("Error in json compare: \(error)")
            return false
        }
    }
}
